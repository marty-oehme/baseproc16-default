#!/usr/bin/env bash
readonly dependency=("nicodebo/base16-zathura")
readonly app="zathura"
#
# zathura does not support including other files into
# its configuration yet. As such, this processor needs to
# change the user's configuration file *itself*.
#
# This will generally not be a problem, though it can lead
# to corrupted configurations in exceptional circumstances
# (such as every line being preceded by the process control
# regex, for whatever reason).
#
# In general, the processor looks for a specific line in the
# following format:
# '# Base16 [theme name] - zathura color config'
# from which it will delete everything until it finds a line:
# '# Base16End [theme name] - zathura color config'
# So, if you don't want to lose anything -
# Do NOT put anything important between those two lines.

path="$1"
package="$2"
theme="$3"
permanent="$4"

zathuraconf="$HOME/.config/zathura/zathurarc"

## Main Entrypoint
#
#  Finds the right theme template file and starts theme
#  switching and, if necessary, permanent setting processes.
main() {
  dbg_msg $app "Starting Processor"
  tfile="$path/$package/build_schemes/base16-$theme.config"

  if ! file_exists "$tfile"; then
    dbg_msg $app "error" "Theme template $theme not found in package $package"
    exit 1
  fi

  if [ ! -f "$zathuraconf" ]; then
    dbg_msg $app "error" "Zathura config file not found. Please make sure file exists: $zathuraconf"
  fi

  if [[ "$permanent" == "true" ]]; then save; fi

  dbg_msg $app "Processor Done"
}

## Theme setter
#
#  Takes care of permanently writing the desired
#  base16 theme into application settings.
save() {
  dbg_msg $app "Saving theme"

  # following format:
  # '# Base16 [theme name] - zathura color config'
  # from which it will delete everything until it finds a line:
  # '# Base16End [theme name] - zathura color config'
  startline="$(grep -ne '^# Base16 .*$' "$zathuraconf" | cut -f1 -d:)"
  endline="$(grep -ne '^# Base16End .*- zathura color config$' "$zathuraconf" | cut -f1 -d:)"

  tmpfile="$zathuraconf.tmp"
  tmptheme="$zathuraconf.thm.tmp"

  if [[ -n "$startline" && -z "$endline" ]] || [[ -z "$startline" && -n "$endline" ]] || [[ "$startline" -gt "$endline" ]]; then
    dbg_msg $app "error" "Base 16 Pattern not correctly recognized in file: $zathuraconf. Please make sure pattern begins with # Base 16 and ends with # Base 16end and only exists once in the file. No changes to file made."

  elif [[ -z "$startline" && -z "$endline" ]]; then
    cat "$zathuraconf" >"$tmpfile" || exit 1
  else
    # remove old lines of any base16 theme
    sed -e "$startline,$endline d" "$zathuraconf" >"$tmpfile" || exit 1

  fi

  # fix template theme name key for easier inclusion
  sed -e "s/^colors:/$theme: \&colorscheme/" "$tfile" >"$tmptheme" || exit 1
  echo "# Base16End $theme - zathura color config" >>"$tmptheme"

  # combine both into final config file
  # replace original file with new colorscheme-added version
  cat "$tmptheme" "$tmpfile" >"$zathuraconf"

  rm "$tmptheme" "$tmpfile"

  dbg_msg $app "Saved theme to $zathuraconf"
}

# Safe sourcing: https://stackoverflow.com/a/12694189
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
# shellcheck source=utilities.sh
. "$DIR/utilities.sh"
## Dependency Checker
#
#  Makes sure the processor is called for the correct
#  base16 package, or refuses to run if it is not.
if printf '%s\n' "${dependency[@]}" | grep -q -P "^$package$"; then
  main
else
  dbg_msg $app "error" "Processor does not work for package $package"
fi
